<adonisControls:AdonisWindow
    x:Class="Joufflu.Samples.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:local="clr-namespace:Joufflu.Samples"
    xmlns:inputs="clr-namespace:Joufflu.Inputs;assembly=Joufflu.Inputs"
    xmlns:popups="clr-namespace:Joufflu.Popups;assembly=Joufflu.Popups"
    xmlns:layouts="clr-namespace:Joufflu.Layouts;assembly=Joufflu.Layouts"
    xmlns:data="clr-namespace:Joufflu.Data;assembly=Joufflu.Data"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:format="clr-namespace:Joufflu.Inputs.Format;assembly=Joufflu.Inputs">
    <adonisControls:AdonisWindow.Resources>
        <ResourceDictionary Source="pack://application:,,,/Joufflu.Popups;component/Resources.xaml" />
    </adonisControls:AdonisWindow.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ListBox x:Name="SideMenu" />

            <TabControl x:Name="MainContainer" Grid.Column="1">
                <TabItem Visibility="Collapsed" Header="Inputs">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="UniformGrid">
                                <Setter Property="Margin" Value="0,0,0,2" />
                            </Style>
                        </StackPanel.Resources>

                        <UniformGrid Columns="3">
                            <TextBlock>TimeSpan input</TextBlock>
                            <inputs:TimeSpanPicker x:Name="TimePickerInput" ValueChanged="TimePickerInput_ValueChanged" />
                            <TextBlock
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                Grid.Column="1"
                                Text="{Binding Value, StringFormat=dd\\:hh\\:mm\\:ss, ElementName=TimePickerInput}" />
                        </UniformGrid>


                        <UniformGrid Columns="3">
                            <TextBlock>Numeric up down</TextBlock>
                            <inputs:NumericUpDown
                                Value="50"
                                x:Name="NumericUpDownInput"
                                ValueChanged="NumericUpDownInput_ValueChanged" />
                            <TextBlock
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                Grid.Column="1"
                                Text="{Binding Value, ElementName=NumericUpDownInput}" />
                        </UniformGrid>

                        <UniformGrid Columns="3">
                            <TextBlock>Decimal up down</TextBlock>
                            <inputs:DecimalUpDown
                                Value="50.5"
                                x:Name="DecimalUpDownInput"
                                ValueChanged="DecimalUpDownInput_ValueChanged" />
                            <TextBlock
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                Grid.Column="1"
                                Text="{Binding Value, ElementName=DecimalUpDownInput}" />
                        </UniformGrid>

                        <UniformGrid Columns="3">
                            <TextBlock>Phone number input</TextBlock>
                            <format:FormatTextBox
                                x:Name="PhoneNumberInput"
                                ValuesChanged="PhoneNumberInput_ValueChanged"
                                GlobalFormat="numeric|min:0|padded"
                                ShowIncrementsButtons="False"
                                Format="+{max:99} {max:99} {max:9999} {max:9999}" />
                            <ListBox Grid.Column="1" ItemsSource="{Binding Values, ElementName=PhoneNumberInput}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </UniformGrid>
                        <UniformGrid Columns="3">
                            <TextBlock>ComboBox with search</TextBlock>
                            <inputs:ComboBoxSearch
                                x:Name="ComboBoxSearchInput"
                                ItemsSource="{Binding TestValues, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                DisplayMemberPath="Name" />
                            <inputs:ComboBoxSearch ItemsSource="{Binding TestValues, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" DisplayMemberPath="Name" />
                            <TextBlock
                                VerticalAlignment="Center"
                                Margin="4,0,0,0"
                                Grid.Column="1"
                                Text="{Binding SelectedItem, ElementName=ComboBoxSearchInput}" />
                        </UniformGrid>
                        <UniformGrid Columns="3">
                            <TextBlock>ComboBox with tags</TextBlock>
                            <inputs:ComboBoxTags
                                x:Name="ComboBoxTagsInput"
                                ItemsSource="{Binding TestValues, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                SelectedItems="{Binding SelectedTestValues, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            <ListBox Grid.Column="1" ItemsSource="{Binding SelectedItems, ElementName=ComboBoxTagsInput}">

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </UniformGrid>

                        <UniformGrid Columns="3">
                            <TextBlock>File picker</TextBlock>
                            <inputs:FilePicker FilePath="{Binding TestValue.FilePath, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            <Button Click="ButtonCheckFile_Click" HorizontalAlignment="Left">
                                Check
                            </Button>
                        </UniformGrid>

                        <UniformGrid Columns="3">
                            <TextBlock>Text editable</TextBlock>
                            <inputs:TextEditable Text="{Binding Text, Mode=TwoWay, ElementName=TestTextBox}" />
                            <TextBox x:Name="TestTextBox" />
                        </UniformGrid>
                    </StackPanel>
                </TabItem>
                <TabItem Visibility="Collapsed" Header="Data">
                    <StackPanel>
                        <DataGrid x:Name="PagingDataGrid" />
                        <data:Paging
                            Capacity="5"
                            Margin="0,2,0,0"
                            Total="{Binding TestValues.Count, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                            PagingChange="Paging_PagingChange" />
                    </StackPanel>
                </TabItem>
                <TabItem Visibility="Collapsed" Header="Popups">
                    <UniformGrid VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Button Margin="1" Click="ShowAlert_Click">Show alert</Button>
                        <Button Margin="1" Click="ShowModal_Click">Show modal</Button>
                        <Button Margin="1" Click="ShowModalValidation_Click">Show modal Validation</Button>
                        <Button Margin="1" Click="ShowMultiple_Click">Show multiple modal</Button>
                    </UniformGrid>
                </TabItem>

                <TabItem Visibility="Collapsed" Header="Layouts">
                    <layouts:FlexibleGrid
                        Columns="2"
                        Gap="4"
                        ColumnsWidth="200,*">
                        <Button Content="Button 1" />
                        <Button Content="Button 2" />

                        <Button Content="Button 3" />
                        <Button Content="Button 4" />

                        <Button Content="Button 5" />
                        <Button Content="Button 6" />

                        <Button Content="Button 7" />
                        <Button Content="Button 8" />

                        <Button Content="Button 9" />
                    </layouts:FlexibleGrid>
                </TabItem>
            </TabControl>
        </Grid>

        <popups:Modal x:Name="Modal" />
        <popups:Alert x:Name="Alert" />
    </Grid>
</adonisControls:AdonisWindow>
