<UserControl
    x:Class="Joufflu.Data.Schema.SchemaEdit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:inputs="clr-namespace:Joufflu.Inputs;assembly=Joufflu.Inputs"
    xmlns:local="clr-namespace:Joufflu.Data.Schema"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="ContainerElement"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Joufflu.Data;component/Schema/SchemaTreeView.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <TreeView
        DataContext="{Binding ElementName=ContainerElement}"
        Grid.IsSharedSizeScope="True"
        ItemContainerStyle="{StaticResource SchemaTreeViewItem}"
        ItemsSource="{Binding Root.Properties}">
        <TreeView.Resources>
            <DataTemplate DataType="{x:Type local:SchemaObject}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <local:IconDataType
                        Margin="6,2"
                        Opacity="0.6"
                        Type="Object" />
                    <inputs:Dropdown
                        Name="ActionContainer"
                        Grid.Column="1"
                        Height="20"
                        Padding="3,0"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        Visibility="Collapsed">
                        <inputs:Dropdown.Header>
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </inputs:Dropdown.Header>
                        <StackPanel Width="100">
                            <Button Command="{Binding AddValueCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.Quotes}" />
                                    <TextBlock Margin="4,0,0,0">value</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding AddArrayCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsSquare}" />
                                    <TextBlock Margin="4,0,0,0">array</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding AddObjectCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsCurly}" />
                                    <TextBlock Margin="4,0,0,0">object</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </inputs:Dropdown>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:SchemaArray}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <local:IconDataType
                        Margin="6,2"
                        Opacity="0.6"
                        Type="Array" />
                    <inputs:Dropdown
                        Name="ActionContainer"
                        Grid.Column="1"
                        Height="20"
                        Padding="3,0"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        Visibility="Collapsed">
                        <inputs:Dropdown.Header>
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </inputs:Dropdown.Header>
                        <StackPanel Width="100">
                            <Button Command="{Binding UseValueCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.Quotes}" />
                                    <TextBlock Margin="4,0,0,0">value</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding UseArrayCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsSquare}" />
                                    <TextBlock Margin="4,0,0,0">array</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding UseObjectCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsCurly}" />
                                    <TextBlock Margin="4,0,0,0">object</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </inputs:Dropdown>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:SchemaValue}">
                <Grid>
                    <local:IconDataType Margin="6,2,0,2" Type="{Binding DataType}" />
                    <ComboBox
                        Name="TypeInput"
                        Width="100"
                        Margin="2,0,0,0"
                        Padding="4,2"
                        HorizontalAlignment="Left"
                        ItemsSource="{extensions:EnumValuesExtension {x:Type local:EnumDataType},
                                                                     IgnoreElements=2}"
                        SelectedItem="{Binding DataType, Mode=TwoWay}"
                        Visibility="Collapsed">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <local:IconDataType Type="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="SharedSchemaTemplate" DataType="{x:Type local:SchemaProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="22" />
                    </Grid.ColumnDefinitions>

                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        
                        <ItemsControl ItemsSource="{Binding Element.ParentsTree}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border
                                        Margin="8,0"
                                        BorderBrush="{StaticResource {x:Static adonisUi:Brushes.Layer0BorderBrush}}"
                                        BorderThickness="1,0,0,0" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <Grid Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock
                                Name="NameText"
                                Padding="4,0"
                                Text="{Binding Name}" />
                            <TextBox
                                Name="NameInput"
                                Padding="4,2"
                                Text="{Binding Name}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ContentControl Margin="0,2" Grid.Column="1" Content="{Binding Element}" />
                    <Button
                        Name="RemoveButton"
                        Grid.Column="2"
                        Command="{Binding RemoveCommand}"
                        Style="{StaticResource IconButtonSmall}"
                        ToolTip="Remove"
                        Visibility="Collapsed">
                        <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsConst}" Value="True">
                        <Setter TargetName="NameText" Property="Opacity" Value="0.6" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            <Condition Binding="{Binding IsConst}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            <Condition Binding="{Binding IsConst}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type local:SchemaParentProperty}" ItemsSource="{Binding ElementParent.Childrens}">
                <ContentPresenter ContentTemplate="{StaticResource SharedSchemaTemplate}" />
            </HierarchicalDataTemplate>

            <DataTemplate DataType="{x:Type local:SchemaProperty}">
                <ContentPresenter ContentTemplate="{StaticResource SharedSchemaTemplate}" />
            </DataTemplate>
        </TreeView.Resources>
    </TreeView>
</UserControl>
