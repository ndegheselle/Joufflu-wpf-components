<UserControl
    x:Class="Joufflu.Data.Schema.SchemaEdit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:local="clr-namespace:Joufflu.Data.Schema"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="ContainerElement"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Joufflu.Data;component/Schema/SchemaTreeView.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:DepthToMarginConverter x:Key="DepthToMarginConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <TreeView
        DataContext="{Binding ElementName=ContainerElement}"
        Grid.IsSharedSizeScope="True"
        ItemContainerStyle="{StaticResource SchemaTreeViewItem}"
        ItemsSource="{Binding Root.Properties}">
        <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type local:SchemaObject}" ItemsSource="{Binding Properties}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition Width="102" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid VerticalAlignment="Center" Margin="{Binding Converter={StaticResource DepthToMarginConverter}}">
                        <TextBlock Padding="4,0" Text="{Binding Name}" />
                        <TextBox
                            Name="NameInput"
                            Padding="4,2"
                            Text="{Binding Name}"
                            Visibility="Collapsed" />
                    </Grid>

                    <fonts:Icon
                        Grid.Column="1"
                        Margin="6,3,0,3"
                        HorizontalAlignment="Left"
                        Opacity="0.8"
                        Text="{x:Static fonts:IconFont.BracketsCurly}" />

                    <fonts:Icon
                        Name="IsArrayIcon"
                        Grid.Column="2"
                        Margin="6,3,0,3"
                        HorizontalAlignment="Left"
                        Text="{x:Static fonts:IconFont.BracketsSquare}" />
                    <CheckBox
                        Name="IsArrayInput"
                        Grid.Column="2"
                        Margin="2,0,0,0"
                        IsChecked="{Binding IsArray}"
                        Visibility="Collapsed">
                        array
                    </CheckBox>

                    <StackPanel
                        Name="ActionContainer"
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                        <Button Style="{StaticResource IconButtonSmall}">
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </Button>
                        <Button Margin="1,0,0,0" Style="{StaticResource IconButtonSmall}">
                            <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                        </Button>
                    </StackPanel>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsArray}" Value="False">
                        <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IsArrayInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IsArrayInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>

            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type local:SchemaValue}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition Width="102" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid VerticalAlignment="Center" Margin="{Binding Converter={StaticResource DepthToMarginConverter}}">
                        <TextBlock Padding="4,0" Text="{Binding Name}" />
                        <TextBox
                            Name="NameInput"
                            Padding="4,2"
                            Text="{Binding Name}"
                            Visibility="Collapsed" />
                    </Grid>

                    <local:IconDataType
                        Grid.Column="1"
                        Margin="6,2,0,2"
                        Type="{Binding DataType}" />
                    <ComboBox
                        Name="TypeInput"
                        Grid.Column="1"
                        Width="100"
                        Margin="2,0,0,0"
                        Padding="4,2"
                        HorizontalAlignment="Left"
                        ItemsSource="{extensions:EnumValuesExtension {x:Type local:EnumDataType}}"
                        SelectedItem="{Binding DataType, Mode=TwoWay}"
                        Visibility="Collapsed">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <local:IconDataType Type="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <fonts:Icon
                        Name="IsArrayIcon"
                        Grid.Column="2"
                        Margin="6,3,0,3"
                        HorizontalAlignment="Left"
                        Text="{x:Static fonts:IconFont.BracketsSquare}" />
                    <CheckBox
                        Name="IsArrayInput"
                        Grid.Column="2"
                        Margin="2,0,0,0"
                        IsChecked="{Binding IsArray}"
                        Visibility="Collapsed">
                        array
                    </CheckBox>

                    <StackPanel
                        Name="ActionContainer"
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                        <Button Margin="1,0,0,0" Style="{StaticResource IconButtonSmall}">
                            <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                        </Button>
                    </StackPanel>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsArray}" Value="False">
                        <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IsArrayInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="IsArrayIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IsArrayInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </TreeView.Resources>
    </TreeView>
</UserControl>
