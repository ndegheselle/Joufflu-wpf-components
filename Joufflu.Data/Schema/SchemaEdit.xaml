<UserControl
    x:Class="Joufflu.Data.Schema.SchemaEdit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:inputs="clr-namespace:Joufflu.Inputs;assembly=Joufflu.Inputs"
    xmlns:local="clr-namespace:Joufflu.Data.Schema"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="ContainerElement"
    mc:Ignorable="d">
    <TreeView
        DataContext="{Binding ElementName=ContainerElement}"
        Grid.IsSharedSizeScope="True"
        ItemsSource="{Binding Root.Properties}">

        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent" />
                <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
                <Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="IsExpanded" Value="True" />
            </Style>
        </TreeView.ItemContainerStyle>

        <TreeView.Resources>

            <DataTemplate DataType="{x:Type local:SchemaObject}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <fonts:Icon
                        Margin="6,3,0,3"
                        HorizontalAlignment="Left"
                        Opacity="0.8"
                        Text="{x:Static fonts:IconFont.BracketsCurly}" />
                    <inputs:Dropdown
                        Name="ActionContainer"
                        Visibility="Collapsed"
                        HorizontalAlignment="Right"
                        Grid.Column="1"
                        Height="20"
                        Padding="3,0"
                        BorderThickness="0">
                        <inputs:Dropdown.Header>
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </inputs:Dropdown.Header>
                        <StackPanel Width="100">
                            <Button Command="{Binding AddValueCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.Quotes}" />
                                    <TextBlock Margin="4,0,0,0">value</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding AddArrayCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsSquare}" />
                                    <TextBlock Margin="4,0,0,0">array</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding AddObjectCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsCurly}" />
                                    <TextBlock Margin="4,0,0,0">object</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </inputs:Dropdown>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:SchemaArray}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <fonts:Icon
                        Margin="6,3,0,3"
                        HorizontalAlignment="Left"
                        Opacity="0.8"
                        Text="{x:Static fonts:IconFont.BracketsSquare}" />
                    <inputs:Dropdown
                        HorizontalAlignment="Right"
                        Name="ActionContainer"
                        Visibility="Collapsed"
                        Grid.Column="1"
                        Height="20"
                        Padding="3,0"
                        BorderThickness="0">
                        <inputs:Dropdown.Header>
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </inputs:Dropdown.Header>
                        <StackPanel Width="100">
                            <Button Command="{Binding UseValueCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.Quotes}" />
                                    <TextBlock Margin="4,0,0,0">value</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding UseArrayCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsSquare}" />
                                    <TextBlock Margin="4,0,0,0">array</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Command="{Binding UseObjectCommand}" Style="{StaticResource ItemButton}">
                                <StackPanel Orientation="Horizontal">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.BracketsCurly}" />
                                    <TextBlock Margin="4,0,0,0">object</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </inputs:Dropdown>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="ActionContainer" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:SchemaValue}">
                <Grid>
                    <local:IconDataType Margin="6,2,0,2" Type="{Binding DataType}" />
                    <ComboBox
                        Name="TypeInput"
                        Width="100"
                        Margin="2,0,0,0"
                        Padding="4,2"
                        HorizontalAlignment="Left"
                        ItemsSource="{extensions:EnumValuesExtension {x:Type local:EnumDataType}}"
                        SelectedItem="{Binding DataType, Mode=TwoWay}"
                        Visibility="Collapsed">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <local:IconDataType Type="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="TypeInput" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type local:SchemaParentProperty}" ItemsSource="{Binding ElementParent.Childrens}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="24" />
                    </Grid.ColumnDefinitions>
                    <Grid VerticalAlignment="Center">
                        <TextBlock Padding="4,0" Text="{Binding Name}" />
                        <TextBox
                            Name="NameInput"
                            Padding="4,2"
                            Text="{Binding Name}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ContentControl Grid.Column="1" Content="{Binding Element}" />
                    <Button
                        Name="RemoveButton"
                        Grid.Column="2"
                        ToolTip="Remove"
                        Visibility="Collapsed"
                        Command="{Binding RemoveCommand}"
                        Style="{StaticResource IconButtonSmall}">
                        <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type local:SchemaProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="24" />
                    </Grid.ColumnDefinitions>
                    <Grid VerticalAlignment="Center">
                        <TextBlock Padding="4,0" Text="{Binding Name}" />
                        <TextBox
                            Name="NameInput"
                            Padding="4,2"
                            Text="{Binding Name}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ContentControl Grid.Column="1" Content="{Binding Element}" />
                    <Button
                        Name="RemoveButton"
                        Grid.Column="2"
                        ToolTip="Remove"
                        Visibility="Collapsed"
                        Command="{Binding RemoveCommand}"
                        Style="{StaticResource IconButtonSmall}">
                        <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </TreeView.Resources>
    </TreeView>
</UserControl>
