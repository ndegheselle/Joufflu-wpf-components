<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:font="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:extensions="clr-namespace:Joufflu.Shared.Extensions;assembly=Joufflu.Shared"
    xmlns:data="clr-namespace:Usuel.Shared.Data;assembly=Usuel.Shared"
    xmlns:local="clr-namespace:Joufflu.Data.Schema"
    xmlns:dnd="clr-namespace:Joufflu.Data.DnD"
    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Joufflu.Shared;component/Styles/NamedStyles/IconButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Joufflu.Data;component/Schema/SchemaTreeViewItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Joufflu.Data;component/Schema/ValueTypeIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type local:DataSchema}">
        <Style.Resources>
            <local:DepthToMarginConverter x:Key="DepthToMarginConverter" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DataSchema}">
                    <TreeView
                        dnd:DropBehavior.Handler="{Binding DropHandler, Mode=OneTime}"
                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Grid.IsSharedSizeScope="True"
                        ItemsSource="{Binding Root.Properties}"
                        ItemContainerStyle="{StaticResource SchemaTreeViewItem}">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type data:SchemaObject}" ItemsSource="{Binding Properties}">
                                <Grid
                                    Background="Transparent"
                                    Height="24"
                                    dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="Name" />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="{Binding Depth, Converter={StaticResource DepthToMarginConverter}}">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Text="{Binding Name}"
                                            Margin="4,0" />
                                        <TextBox
                                            Margin="0,1"
                                            Padding="4,0"
                                            Visibility="Collapsed"
                                            Name="TextBoxName"
                                            Text="{Binding Name, Mode=TwoWay}" />
                                    </Grid>

                                    <Grid Margin="2,0,0,0" Grid.Column="1">
                                        <local:ValueTypeIcon Margin="8,0,0,0" Type="{Binding Type}" />
                                        <ComboBox
                                            Margin="0,1"
                                            Width="100"
                                            HorizontalAlignment="Left"
                                            Visibility="Collapsed"
                                            Name="ComboBoxType"
                                            SelectedItem="{Binding Type, Mode=TwoWay}"
                                            ItemsSource="{extensions:EnumValuesExtension {x:Type data:EnumValueType}}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <local:ValueTypeIcon Type="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>

                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Margin="1"
                                        Name="ContainerActions"
                                        Grid.Column="2"
                                        Orientation="Horizontal"
                                        Visibility="Collapsed">
                                        <Button
                                            Command="{Binding AddPropertyCommand}"
                                            Background="Transparent"
                                            Padding="6"
                                            Margin="1,0,0,0"
                                            Style="{StaticResource IconButton}">
                                            <font:Icon FontSize="10" Text="{x:Static font:IconFont.Plus}" />
                                        </Button>
                                        <Button
                                            Command="{Binding RemoveCommand}"
                                            Background="Transparent"
                                            Margin="1,0,0,0"
                                            Padding="6"
                                            Style="{StaticResource IconButton}">
                                            <font:Icon FontSize="10" Text="{x:Static font:IconFont.Trash}" />
                                        </Button>
                                    </StackPanel>
                                    <Border
                                        Grid.ColumnSpan="2"
                                        Name="DropPreview"
                                        BorderBrush="{StaticResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBorderBrush}}" />
                                </Grid>

                                <HierarchicalDataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsHovered}" Value="True">
                                        <Setter TargetName="DropPreview" Property="BorderThickness" Value="0,4,0,0" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:DataSchema}}}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="ContainerActions" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:DataSchema}}}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="ContainerActions" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="TextBoxName" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="ComboBoxType" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </HierarchicalDataTemplate.Triggers>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type data:SchemaValue}">
                                <Grid
                                    Background="Transparent"
                                    Height="24"
                                    dnd:DragBehavior.Handler="{Binding DataContext.DragHandler, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Mode=OneTime}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="Name" />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="{Binding Depth, Converter={StaticResource DepthToMarginConverter}}">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Text="{Binding Name}"
                                            Margin="4,0" />
                                        <TextBox
                                            Margin="0,1"
                                            Padding="4,0"
                                            Visibility="Collapsed"
                                            Name="TextBoxName"
                                            Text="{Binding Name, Mode=TwoWay}" />
                                    </Grid>

                                    <Grid Grid.Column="1" Margin="2,0,0,0">
                                        <local:ValueTypeIcon Margin="8,0,0,0" Type="{Binding Type}" />
                                        <ComboBox
                                            Margin="0,1"
                                            Width="100"
                                            HorizontalAlignment="Left"
                                            Visibility="Collapsed"
                                            Name="ComboBoxType"
                                            SelectedItem="{Binding Type, Mode=TwoWay}"
                                            ItemsSource="{extensions:EnumValuesExtension {x:Type data:EnumValueType}}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <local:ValueTypeIcon Type="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>

                                    <Button
                                        HorizontalAlignment="Right"
                                        Command="{Binding RemoveCommand}"
                                        Background="Transparent"
                                        Margin="1"
                                        Name="BtnRemove"
                                        Grid.Column="3"
                                        Padding="6"
                                        Style="{StaticResource IconButton}"
                                        Visibility="Collapsed">
                                        <font:Icon FontSize="10" Text="{x:Static font:IconFont.Trash}" />
                                    </Button>

                                    <Border
                                        Grid.ColumnSpan="2"
                                        Name="DropPreview"
                                        BorderBrush="{StaticResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBorderBrush}}" />
                                </Grid>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsHovered}" Value="True">
                                        <Setter TargetName="DropPreview" Property="BorderThickness" Value="0,4,0,0" />
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:DataSchema}}}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="BtnRemove" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:DataSchema}}}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="BtnRemove" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="TextBoxName" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="ComboBoxType" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
