<UserControl
    x:Class="Joufflu.Data.Schema.GenericEdit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:collections="clr-namespace:System.Collections.Generic;assembly=System.Runtime"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:inputs="clr-namespace:Joufflu.Inputs;assembly=Joufflu.Inputs"
    xmlns:local="clr-namespace:Joufflu.Data.Schema"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:schema="clr-namespace:Usuel.Shared.Schema;assembly=Usuel.Shared"
    x:Name="ContainerElement"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Joufflu.Data;component/Schema/SchemaTreeView.xaml" />
                <ResourceDictionary Source="/Joufflu.Data;component/Schema/Separators.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:ValueTemplateSelector x:Key="ValueTemplateSelector">
                <local:ValueTemplateSelector.StringTemplate>
                    <DataTemplate DataType="{x:Type schema:GenericValue}">
                        <TextBox Padding="4,2" Text="{Binding Value, Mode=TwoWay}" />
                    </DataTemplate>
                </local:ValueTemplateSelector.StringTemplate>
                <local:ValueTemplateSelector.BooleanTemplate>
                    <DataTemplate DataType="{x:Type schema:GenericValue}">
                        <CheckBox IsChecked="{Binding Value, Mode=TwoWay}" />
                    </DataTemplate>
                </local:ValueTemplateSelector.BooleanTemplate>
                <local:ValueTemplateSelector.DecimalTemplate>
                    <DataTemplate DataType="{x:Type schema:GenericValue}">
                        <inputs:DecimalUpDown Value="{Binding Value, Mode=TwoWay}" />
                    </DataTemplate>
                </local:ValueTemplateSelector.DecimalTemplate>
                <local:ValueTemplateSelector.DateTimeTemplate>
                    <DataTemplate DataType="{x:Type schema:GenericValue}">
                        <DatePicker SelectedDate="{Binding Value, Mode=TwoWay}" />
                    </DataTemplate>
                </local:ValueTemplateSelector.DateTimeTemplate>
                <local:ValueTemplateSelector.TimeSpanTemplate>
                    <DataTemplate DataType="{x:Type schema:GenericValue}">
                        <inputs:TimeSpanPicker Value="{Binding Value, Mode=TwoWay}" />
                    </DataTemplate>
                </local:ValueTemplateSelector.TimeSpanTemplate>
            </local:ValueTemplateSelector>

            <local:WrapValuesConverter x:Key="WrapValuesConverter" />

            <HierarchicalDataTemplate
                x:Key="ObjectKeyTemplate"
                DataType="{x:Type local:GenericProperty}"
                ItemsSource="{Binding Element, Converter={StaticResource WrapValuesConverter}}">
                <Grid Height="26">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>

                    <local:Separators Element="{Binding Element.Schema}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                    </local:Separators>
                    <local:IconDataType
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        Opacity="0.6"
                        Type="Object" />
                </Grid>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate
                x:Key="ArrayKeyTemplate"
                DataType="{x:Type local:GenericProperty}"
                ItemsSource="{Binding Element, Converter={StaticResource WrapValuesConverter}}">
                <Grid Height="26">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <local:Separators Element="{Binding Element.Schema}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                    </local:Separators>
                    <local:IconDataType
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        Opacity="0.6"
                        Type="Array" />

                    <StackPanel
                        Grid.Column="2"
                        Margin="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button Command="{Binding Element.AddCommand}" Style="{StaticResource IconButtonSmall}">
                            <fonts:Icon Text="{x:Static fonts:IconFont.Plus}" />
                        </Button>
                        <Button
                            Margin="1,0,0,0"
                            Command="{Binding Element.RemoveCommand}"
                            Style="{StaticResource IconButtonSmall}">
                            <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                        </Button>
                    </StackPanel>
                </Grid>
            </HierarchicalDataTemplate>

            <DataTemplate x:Key="NodeKeyTemplate" DataType="{x:Type local:GenericProperty}">
                <Grid Height="26">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <local:Separators Element="{Binding Element.Schema}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                    </local:Separators>
                    <ContentControl
                        Grid.Column="1"
                        Margin="4,1,1,1"
                        Content="{Binding Element}"
                        ContentTemplateSelector="{StaticResource ValueTemplateSelector}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="SharedSchemaTemplate" DataType="{x:Type local:GenericProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Name" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="22" />
                    </Grid.ColumnDefinitions>

                    <local:Separators Element="{Binding Element}">
                        <Grid VerticalAlignment="Center">
                            <TextBlock
                                Name="NameText"
                                Padding="4,0"
                                Text="{Binding Identifier}" />
                            <TextBox
                                Name="NameInput"
                                Padding="4,2"
                                Visibility="Collapsed" />
                        </Grid>
                    </local:Separators>

                    <ContentControl
                        Grid.Column="1"
                        Margin="0,2"
                        Content="{Binding Element}" />
                    <Button
                        Name="RemoveButton"
                        Grid.Column="2"
                        Command="{Binding RemoveCommand}"
                        Style="{StaticResource IconButtonSmall}"
                        ToolTip="Remove"
                        Visibility="Collapsed">
                        <fonts:Icon Text="{x:Static fonts:IconFont.Trash}" />
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsConst}" Value="True">
                        <Setter TargetName="NameText" Property="Opacity" Value="0.6" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            <Condition Binding="{Binding IsConst}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True" />
                            <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:SchemaEdit}}}" Value="False" />
                            <Condition Binding="{Binding IsConst}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter TargetName="NameInput" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <local:GenericTemplateSelector
                x:Key="GenericTemplateSelector"
                ArrayKeyTemplate="{StaticResource ArrayKeyTemplate}"
                NodeKeyTemplate="{StaticResource NodeKeyTemplate}"
                ObjectKeyTemplate="{StaticResource ObjectKeyTemplate}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <TreeView
        DataContext="{Binding ElementName=ContainerElement}"
        Grid.IsSharedSizeScope="True"
        ItemContainerStyle="{StaticResource SchemaTreeViewItem}"
        ItemTemplateSelector="{StaticResource GenericTemplateSelector}"
        ItemsSource="{Binding Root, Converter={StaticResource WrapValuesConverter}}" />
</UserControl>