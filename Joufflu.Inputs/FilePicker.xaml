<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared"
    xmlns:local="clr-namespace:Joufflu.Inputs">
    <Style TargetType="{x:Type local:FilePicker}">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FilePicker}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:FilePicker}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <adonisControls:ValidationErrorIndicator
                            x:Name="ErrorAlertHost"
                            Margin="8,0,4,0"
                            ErrorMessagePlacement="Top"
                            IsErrorMessageDisplayOnFocusEnabled="True"
                            IsErrorMessageDisplayOnMouseOverEnabled="True"
                            IsValidatedElementFocused="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=local:FilePicker}}"
                            ValidatedElement="{Binding ., RelativeSource={RelativeSource AncestorType=local:FilePicker}}"
                            Visibility="Collapsed" />

                        <Grid Grid.Column="1">

                            <TextBox
                                x:Name="ErrorBorder"
                                MinWidth="100"
                                Text="{Binding FilePath, TargetNullValue='', Mode=TwoWay}" />

                            <StackPanel
                                Margin="2,1"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                                <Button
                                    Padding="6,5"
                                    VerticalAlignment="Center"
                                    Command="{Binding ClearCommand}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource IconButton}" TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FilePath}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <fonts:Icon Text="{x:Static fonts:IconFont.X}" />
                                </Button>
                                <Button
                                    Padding="6,4"
                                    VerticalAlignment="Center"
                                    Command="{Binding SelectCommand}"
                                    Style="{StaticResource IconButton}">
                                    <fonts:Icon Text="{x:Static fonts:IconFont.File}" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="ErrorAlertHost" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ErrorBorder" Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                            <Setter TargetName="ErrorBorder" Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>