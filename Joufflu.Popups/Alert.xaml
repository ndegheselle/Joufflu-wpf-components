<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Joufflu.Popups"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared">
    <Style x:Key="{x:Type local:Alert}" TargetType="{x:Type local:Alert}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="500" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Alert}">
                    <Border
                        x:Name="AlertContainer"
                        CornerRadius="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}"
                        BorderThickness="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}"
                        Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
                        BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
                        <Border.RenderTransform>
                            <TranslateTransform Y="-200" />
                        </Border.RenderTransform>
                        <Grid>
                            <ProgressBar
                                adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="False"
                                x:Name="ProgressBarTimer"
                                VerticalAlignment="Top"
                                Height="4"
                                BorderThickness="0">
                                <ProgressBar.Style>
                                    <Style TargetType="ProgressBar">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Warning">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Error">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Success">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>

                            <Grid Margin="8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <fonts:Icon VerticalAlignment="Center" FontSize="16">
                                    <fonts:Icon.Style>
                                        <Style TargetType="{x:Type fonts:Icon}" BasedOn="{StaticResource {x:Type fonts:Icon}}">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                                            <Setter Property="Text" Value="{x:Static fonts:IconFont.Info}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Warning">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.Warning}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Error">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.Warning}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Options.Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Success">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.SuccessBrush}}" />
                                                    <Setter Property="Text" Value="{x:Static fonts:IconFont.CheckCircle}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </fonts:Icon.Style>
                                </fonts:Icon>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Margin="4,0,0,0"
                                    Grid.Column="1"
                                    TextWrapping="Wrap"
                                    Text="{Binding Options.Message, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>

                            <Button
                                Margin="0,4,0,0"
                                Grid.Column="1"
                                Background="Transparent"
                                BorderThickness="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                ContentTemplate="{DynamicResource {x:Static adonisUi:Icons.WindowClose}}"
                                Width="23"
                                Height="23"
                                Command="{Binding CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>